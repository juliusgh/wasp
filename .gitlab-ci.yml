.stage_artifacts: &stage_artifacts
  artifacts:
    paths:
      - build/
      - TriBITS/
      - googletest/
      - testframework/
    expire_in: 1 day
.mingw_windows_before_script: &mingw_windows_before_script
  before_script:
    - set PATH=%PATH%;c:\vendors\mingw-w64\x86_64-4.8.5-posix-seh-rt_v4-rev0\mingw64\bin;c:\vendors\git\2.11\cmd;c:\vendors\cmake\3.6.3\bin;c:\Python27;
stages:
- configure
- build
- test
- analysis

configure_mac:
  stage: configure
  tags:
    - mac
  <<: *stage_artifacts
  script:
    - which git
    - git --version
    - git clone https://github.com/lefebvre/TriBITS.git TriBITS
    - git clone https://github.com/lefebvre/testframework testframework
    - git clone https://github.com/lefebvre/googletest googletest
    - which python
    - python --version
    - python TriBITS/tribits/python_utils/gitdist.py pull
    - mkdir build
    - cd build
    - module load cmake
    - which cmake
    - cmake -DBUILDNAME="$(uname -s)-AppleClang-8-Debug-${CI_BUILD_REF_NAME}" -DCMAKE_BUILD_TYPE=DEBUG -Dwasp_ENABLE_TESTS=ON -Dwasp_ENABLE_ALL_PACKAGES=ON ..

build_mac:
  stage: build
  tags:
    - mac
  <<: *stage_artifacts
  script:
    - cd build
    - module load cmake
    - ctest -D ExperimentalStart -D ExperimentalBuild -D ExperimentalSubmit
  dependencies:
    - configure_mac

test_mac:
  stage: test
  tags:
    - mac
  <<: *stage_artifacts
  script:
    - cd build
    - module load cmake
    - ctest -D ExperimentalTest -D ExperimentalSubmit
  dependencies:
    - build_mac

configure_linux:
  stage: configure
  tags:
    - linux
  <<: *stage_artifacts
  script:
    - which git
    - git --version
    - git clone https://github.com/lefebvre/TriBITS.git TriBITS
    - git clone https://github.com/lefebvre/testframework testframework
    - git clone https://github.com/lefebvre/googletest googletest
    - which python
    - python --version
    - python TriBITS/tribits/python_utils/gitdist.py pull
    - mkdir build
    - cd build
    - module load cmake
    - which cmake
    - module load valgrind
    - ls -l ${CI_PROJECT_DIR}/googletest
    - cmake -MEMCHECK_COMMAND="$(which valgrind)" -DBUILDNAME="$(uname -s)-GCC-4.8.5-Debug-${CI_BUILD_REF_NAME}" -DCMAKE_BUILD_TYPE=DEBUG -Dwasp_ENABLE_COVERAGE_TESTING=ON -D COVERAGE_EXTRA_FLAGS="-s ${CI_PROJECT_DIR}/googletest -d"-Dwasp_ENABLE_TESTS=ON -Dwasp_ENABLE_ALL_PACKAGES=ON ..

build_linux:
  stage: build
  tags:
    - linux
  <<: *stage_artifacts
  script:
    - cd build
    - ctest -D ExperimentalStart -D ExperimentalBuild -D ExperimentalSubmit
  dependencies:
    - configure_linux

test_linux:
  stage: test
  tags:
    - linux
  <<: *stage_artifacts
  script:
    - cd build
    - ctest -D ExperimentalTest -D ExperimentalSubmit
  dependencies:
    - build_linux
analysis_linux:
  stage: analysis
  tags:
    - linux
  script:
    - cd build
    - ctest -D ExperimentalCoverage -D ExperimentalMemCheck -D ExperimentalSubmit
  dependencies:
    - test_linux
  allow_failure: true

configure_windows_mingw:
  stage: configure
  tags:
    - mingw-gcc-4.8.5
  <<: *stage_artifacts
  <<: *mingw_windows_before_script
  script:
   - where git
   - git --version
   - where python
   - python --version
   - where cmake
   - cmake --version
   - git clone https://github.com/lefebvre/TriBITS.git TriBITS
   - git clone https://github.com/lefebvre/testframework testframework
   - git clone https://github.com/lefebvre/googletest googletest
   - mkdir build
   - cd build
   - cmake -DBUILDNAME="Windows-MinGW-GCC-4.8.5-Debug-%CI_BUILD_REF_NAME%" -DCMAKE_BUILD_TYPE=DEBUG -Dwasp_ENABLE_TESTS=ON -Dwasp_ENABLE_ALL_PACKAGES=ON -G "MinGW Makefiles" ..

build_windows_mingw:
  stage: build
  tags:
    - mingw-gcc-4.8.5
  <<: *stage_artifacts
  <<: *mingw_windows_before_script
  script:
    - cd build/
    - ctest -D ExperimentalStart -D ExperimentalBuild -D ExperimentalSubmit
  dependencies:
    - configure_windows_mingw

test_windows_mingw:
  stage: test
  tags:
   - mingw-gcc-4.8.5
  <<: *stage_artifacts
  <<: *mingw_windows_before_script
  script:
    - cd build
    - ctest -D ExperimentalTest -D ExperimentalSubmit
  dependencies:
    - build_windows_mingw

configure_windows_vs2013:
  stage: configure
  tags:
    - vs2013
  <<: *stage_artifacts
  script:
    - where git
    - git --version
    - where python
    - python --version
    - where cmake
    - cmake --version
    - git clone https://github.com/lefebvre/TriBITS.git TriBITS
    - git clone https://github.com/lefebvre/testframework testframework
    - git clone https://github.com/lefebvre/googletest googletest
    - mkdir build
    - cd build
    - cmd /k ""C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat"" x86_amd64
    - cmake -DBUILDNAME="Windows-CL-18-Release-%CI_BUILD_REF_NAME%" -DCMAKE_BUILD_TYPE:STRING=RELEASE -Dwasp_ENABLE_TESTS:BOOL=ON -Dwasp_ENABLE_ALL_PACKAGES:BOOL=ON -G "Visual Studio 12 2013 Win64" ..

build_windows_vs2013:
  stage: build
  tags:
    - vs2013
  <<: *stage_artifacts
  script:
    - cd build/
    - cmd /k ""C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat"" x86_amd64
    - ctest -D ExperimentalStart -D ExperimentalBuild -D ExperimentalSubmit
  dependencies:
    - configure_windows_vs2013

test_windows_vs2013:
  stage: test
  tags:
    - vs2013
  <<: *stage_artifacts
  script:
    - cd build
    - cmd /k ""C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat"" x86_amd64
    - ctest -D ExperimentalTest -D ExperimentalSubmit
  dependencies:
    - build_windows_vs2013
